{"version":3,"file":"static/js/71.610e07bd.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","redux/contact/selectors.js","components/ContactList/ContactList.jsx","components/Section/Section.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  font-size: 30px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 10px;\n  font-size: 24px;\n`;\n\nexport const Field = styled.input`\n  height: 32px;\n  font-size: 24px;\n  border-radius: 8px;\n  border: none;\n  padding: 5px;\n`;\n\nexport const Add = styled.button`\n  font-size: 16px;\n  border-radius: 8px;\n  border: none;\n  padding: 10px;\n  cursor: pointer;\n  margin-bottom: 10px;\n  background-color: darkgray;\n  &:hover {\n    background-color: green;\n  }\n`;\nexport const OpenForm = styled.button`\n  font-size: 24px;\n  border-radius: 50%;\n  border: none;\n  cursor: pointer;\n  background-color: inherit;\n  &:hover {\n    background-color: darkgray;\n  }\n`;\n","import { useState, useRef } from 'react';\nimport { Notify } from 'notiflix';\nimport { Form, Label, Field, Add, OpenForm } from './ContactForm.styled';\nimport { Flipper, Flipped } from 'react-flip-toolkit';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { TiDelete } from 'react-icons/ti';\nimport { addContacts } from 'redux/contact/operations';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts.contacts);\n  const [isOpen, setIsOpen] = useState(false);\n  const [name, setContactName] = useState('');\n  const [number, setNumber] = useState('');\n  const ref = useRef();\n\n  const toggleState = () => {\n    if (isOpen) return;\n    setIsOpen(!isOpen);\n    ref.current.blur();\n  };\n\n  const onInputChange = e => {\n    const fieldName = e.currentTarget.name;\n    const fieldValue = e.currentTarget.value;\n\n    if (fieldName === 'name') {\n      setContactName(fieldValue);\n    }\n    if (fieldName === 'number') {\n      setNumber(fieldValue);\n    }\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n    if (contacts.items.length > 0) {\n      const contactsInPhonebook = [];\n      contacts.items.forEach(({ name }) =>\n        contactsInPhonebook.push(name.toLowerCase())\n      );\n      if (contactsInPhonebook.includes(name.toLowerCase())) {\n        Notify.warning(`${name}is already in contacts.`);\n        form.reset();\n        return;\n      }\n    }\n    dispatch(addContacts({ name, number }));\n    form.reset();\n    setIsOpen(false);\n  };\n\n  return (\n    <>\n      <Flipper flipKey={isOpen} spring=\"stiff\" stagger>\n        {isOpen ? (\n          <Flipped flipId=\"wrapper\">\n            <div ref={ref}>\n              <Form onSubmit={onSubmit}>\n                <Label>\n                  Name\n                  <Field\n                    type=\"text\"\n                    name=\"name\"\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                    required\n                    onChange={onInputChange}\n                  />\n                </Label>\n                <Label>\n                  Number\n                  <Field\n                    type=\"tel\"\n                    name=\"number\"\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                    required\n                    onChange={onInputChange}\n                  />\n                </Label>\n                <Add type=\"submit\">Add contact</Add>\n                <OpenForm type=\"button\" onClick={() => setIsOpen(false)}>\n                  <TiDelete\n                    style={{\n                      color: 'tomato',\n                      fontSize: '36px',\n                      marginBottom: '-4px',\n                    }}\n                  />\n                </OpenForm>\n              </Form>\n            </div>\n          </Flipped>\n        ) : (\n          <Flipped flipId=\"wrapper\">\n            <div ref={ref} onClick={toggleState}>\n              <Flipped flipId=\"action\">\n                <OpenForm>+</OpenForm>\n              </Flipped>\n            </div>\n          </Flipped>\n        )}\n      </Flipper>\n    </>\n  );\n};\n\nexport default ContactForm;\n","import styled from 'styled-components';\n\nexport const Delete = styled.span`\n  background-color: inherit;\n  border: none;\n  cursor: pointer;\n  margin-right: 10px;\n`;\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n`;\n\nexport const Item = styled.li`\n  font-size: 24px;\n`;\n","export const selectContacts = state => state.contacts.contacts.items;\nexport const selectIsLoading = state => state.contacts.contacts.isLoading;\nexport const selectError = state => state.contacts.contacts.error;\nexport const selectFilter = state => state.contacts.filters;\n","import { Delete, List, Item } from './ContactList.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { TiDelete } from 'react-icons/ti';\nimport { deleteContact } from 'redux/contact/operations';\nimport { selectFilter, selectContacts } from 'redux/contact/selectors';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const filters = useSelector(selectFilter);\n  const contacts = useSelector(selectContacts);\n\n  const handleDelete = id => {\n    return dispatch(deleteContact(id));\n  };\n\n  const getVisibleContacts = (contacts, filters) => {\n    if (filters === '') return contacts;\n    return contacts.filter(contact => {\n      return contact.name.toLowerCase().includes(filters?.toLowerCase());\n    });\n  };\n\n  const visibleContacts = getVisibleContacts(contacts, filters);\n\n  if (!visibleContacts) return;\n\n  return (\n    <List>\n      {visibleContacts.map(({ id, name, number }) => (\n        <Item key={id}>\n          <Delete\n            onClick={() => {\n              handleDelete(id);\n            }}\n          >\n            <TiDelete\n              style={{\n                color: 'tomato',\n                fontSize: '36px',\n                marginBottom: '-4px',\n              }}\n            />\n          </Delete>\n          {name} : {number}\n        </Item>\n      ))}\n    </List>\n  );\n};\nexport default ContactList;\n","import PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { selectError, selectIsLoading } from 'redux/contact/selectors';\nimport { Loader } from '../Loader';\n\nconst Section = ({ header, title, children }) => {\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  return (\n    <>\n      {header && <h1>{header}</h1>}\n      {title && (isLoading && !error ? <Loader /> : <h2>{title}</h2>)}\n\n      {children}\n    </>\n  );\n};\n\nexport default Section;\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  header: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  font-size: 24px;\n`;\n\nexport const Field = styled.input`\n  height: 32px;\n  font-size: 24px;\n  border-radius: 8px;\n  border: none;\n  padding: 5px;\n`;\n","import { Label, Field } from './Filter.styled';\nimport { useDispatch } from 'react-redux';\nimport { setStatusFilter } from '../../redux/contact/filtersSlice';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const handleFilterChange = e => {\n    dispatch(setStatusFilter(e.currentTarget.value));\n  };\n\n  return (\n    <Label>\n      Find contact by name\n      <Field type=\"name\" required onChange={handleFilterChange} />\n    </Label>\n  );\n};\n\nexport default Filter;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { fetchContacts } from 'redux/contact/operations';\nimport { Container } from 'components/App.styled';\nimport ContactForm from 'components/ContactForm';\nimport ContactList from 'components/ContactList';\nimport Section from 'components/Section';\nimport Filter from 'components/Filter';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts.contacts.items);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <Container>\n        <Section title=\"\" header=\"Phonebook\">\n          <ContactForm />\n        </Section>\n        {contacts && contacts.length > 0 && (\n          <Section header=\"\" title=\"Contacts\">\n            <Filter />\n            <ContactList />\n          </Section>\n        )}\n      </Container>\n    </>\n  );\n}\n"],"names":["Form","styled","Label","Field","Add","OpenForm","dispatch","useDispatch","contacts","useSelector","state","useState","isOpen","setIsOpen","name","setContactName","number","setNumber","ref","useRef","onInputChange","e","fieldName","currentTarget","fieldValue","value","flipKey","spring","stagger","flipId","onSubmit","preventDefault","form","target","items","length","contactsInPhonebook","forEach","push","toLowerCase","includes","Notify","reset","addContacts","type","pattern","title","required","onChange","onClick","style","color","fontSize","marginBottom","current","blur","Delete","List","Item","selectContacts","selectIsLoading","isLoading","selectError","error","selectFilter","filters","visibleContacts","filter","contact","getVisibleContacts","map","id","deleteContact","handleDelete","header","children","Loader","setStatusFilter","Contacts","useEffect","fetchContacts","Helmet"],"sourceRoot":""}